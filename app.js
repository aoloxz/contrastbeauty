// simplified v9 app.js
const $=(s,c=document)=>c.querySelector(s);
const $$=(s,c=document)=>Array.from(c.querySelectorAll(s));
const CURRENT_KEY='cb_current_user';const REWARD_STAMPS=5;
function currentUserEmail(){return localStorage.getItem(CURRENT_KEY)||null}
function setCurrentUser(e){if(e){localStorage.setItem(CURRENT_KEY,e)}else{localStorage.removeItem(CURRENT_KEY)}}
async function api(path,method='GET',body=null){const r=await fetch(`/.netlify/functions/${path}`,{method,headers:body?{'Content-Type':'application/json'}:undefined,body:body?JSON.stringify(body):undefined});if(!r.ok)throw new Error(await r.text());return await r.json()}
const signupApi=d=>api('signup','POST',d),loginApi=(e,p)=>api('login','POST',{email:e,password:p}),getUserApi=e=>fetch(`/.netlify/functions/getUser?email=${encodeURIComponent(e)}`).then(r=>r.json()),updateVisitsApi=(e,d)=>api('updateVisits','POST',{email:e,delta:d});
const routes=['home','services','card','rewards','profile','login'];let route='home';let cachedUser=null;
async function fetchCurrentUser(){const e=currentUserEmail();if(!e)return null;try{cachedUser=await getUserApi(e);}catch(_){cachedUser=null;}return cachedUser}
function navTo(r){const e=currentUserEmail();if(!e&&r!=='login'){r='login'}if(!routes.includes(r))r='home';route=r;window.location.hash=r;render()}
function Home(u){return `<section class='card'><h2>Bine ai venit, ${u?.name||'client'}</h2></section>`}
function Services(){return `<section class='card'><h2>Servicii</h2><p>Listă servicii...</p></section>`}
function Card(u){if(!u)return `<section class='card'><h2>Card</h2><p>Autentifică-te.</p></section>`;const pct=Math.min(100,(u.visits%REWARD_STAMPS)/REWARD_STAMPS*100);return `<section class='card'><h2>Card membru</h2><div class='progress'><div class='fill' style='width:${pct}%'></div></div></section>`}
function Rewards(u){return `<section class='card'><h2>Recompense</h2><p>${u?.visits||0} vizite</p></section>`}
function Profile(u){return `<section class='card'><h2>Profil</h2><p>${u?.name||''}</p><button class='btn' id='btn-logout'>Delogare</button></section>`}
function LoginScreen(){return `<section class='card auth-card'><h2>Login</h2><input class='input' id='login-email' placeholder='Email'><input class='input' id='login-pass' type='password' placeholder='Parolă'><button class='btn primary' id='login-btn'>Intră</button><p class='small'>Nu ai cont? <a href='#' id='show-signup'>Creează cont</a></p><form id='signup-form' class='hidden'><h2>Creează cont</h2><input class='input' id='su-name' placeholder='Nume'><input class='input' id='su-email' placeholder='Email'><input class='input' id='su-pass' type='password' placeholder='Parolă'><textarea class='input' id='su-about' placeholder='Despre tine'></textarea><button class='btn primary' id='signup-btn'>Creează cont</button></form></section>`}
async function render(){const app=$('#app');if(!app)return;let html='';const e=currentUserEmail();const u=e?await fetchCurrentUser():null;switch(route){case'home':html=Home(u);break;case'services':html=Services();break;case'card':html=Card(u);break;case'rewards':html=Rewards(u);break;case'profile':html=Profile(u);break;case'login':default:html=LoginScreen()}app.innerHTML=html;bindEvents(u)}
function bindEvents(u){$$('.nav-btn').forEach(btn=>{btn.onclick=()=>{const r=btn.getAttribute('data-route');navTo(r);$$('.nav-btn').forEach(b=>b.classList.toggle('active',b===btn));};});$('#login-btn')?.addEventListener('click',async()=>{const email=$('#login-email').value.trim();const pass=$('#login-pass').value.trim();try{const user=await loginApi(email,pass);setCurrentUser(user.email);navTo('home')}catch(e){alert('Eroare login')}});$('#show-signup')?.addEventListener('click',e=>{e.preventDefault();$('#signup-form').classList.remove('hidden')});$('#signup-btn')?.addEventListener('click',async()=>{const name=$('#su-name').value.trim();const email=$('#su-email').value.trim();const pass=$('#su-pass').value.trim();const about=$('#su-about').value.trim();try{const user=await signupApi({name,email,password:pass,about});setCurrentUser(user.email);navTo('home')}catch(e){alert('Eroare signup')}});$('#btn-logout')?.addEventListener('click',()=>{setCurrentUser(null);navTo('login')});}
window.addEventListener('load',()=>{setTimeout(()=>$('#splash').classList.add('run'),900);setTimeout(()=>{$('#splash').classList.add('hidden');document.querySelectorAll('.site-header,.site-footer,#app').forEach(el=>el.classList.remove('hidden'));const e=currentUserEmail();if(e)navTo('home');else navTo('login');render();},2000)});
window.addEventListener('hashchange',()=>{const h=location.hash.replace('#','');navTo(h||'home')});
